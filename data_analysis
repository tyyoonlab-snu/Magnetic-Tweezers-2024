%% Load Files
clear all
close all

% Prompt the user to select a folder
folder = uigetdir();

% Change the current folder to the selected folder
cd(folder);

% Answer 2 questions
RM_number = input('Room number? (1 or 2)  ');

if RM_number == 1
    F0 = -0.0667; A1 = 0.0113; d1 = -3.3477; A2 = 2.4916e-07; d2 = -1.3388; % M270 (RM1)
elseif RM_number == 2
    F0 = 0.007229; A1 = 0.02587; d1 = -3.732736; A2 = 4.959e-10; d2 = -0.989119; % M270 (RM2)
end

freq = input('Recording frequency? (100 for STD / 1200 for HS)  ');

% Set bead number
which_bead = '';
while isempty(which_bead)
    which_bead = input('Which bead do you want to analyze: ','s');
end
Rbead = 1400; T = 298;
correction_factor = 0.878; pixel_size = 80; % Correction factor; refraction correction

% Set bead number
bead_to_analyze = ['B', which_bead, '*']; % Change the folder name that you want to analyze
temp = dir(bead_to_analyze);
pths = arrayfun(@(i) {[temp(i).name, '/']}, 1:numel(temp));
npth = numel(pths); % Number of beads you analyze

% Initialize cells for data storage
[finfo, fname, nbead, nframe, fps, Roff, ori, f, t, t2, M, R, P, F, rz, rx, ry, x, y, z, dx, dy, dz] = deal(cell(npth, 1));

paths = temp.folder;
n_bead = temp.name;
pos_BS = find(paths == '\');
nfile = zeros(npth, 1);

% Read and process data files
for p = 1:npth
    finfo{p} = dir([pths{p}, 'r*.xls']);
    nfile(p) = numel(finfo{p});
    [fname{p}, Roff{p}, ori{p}, f{p}, M{p}, R{p}, P{p}, F{p}, x{p}, y{p}, z{p}, dx{p}, dy{p}, dz{p}] = deal(cell(nfile(p), 1));
    [nbead{p}, fps{p}, nframe{p}] = deal(zeros(nfile(p), 1));
    for n = 1:nfile(p)
        disp([int2str(n / nfile(p) * 100), '% of ', pths{p}(1:end-1), '...']);
        fname{p}{n} = finfo{p}(n).name;
        fname_motor = ['s', fname{p}{n}(2:end)];

        dat = dlmread([pths{p}, fname_motor]);
        t2{p}{n} = dat(:, 1);
        M{p}{n} = dat(:, 2);
        F{p}{n} = F0 + A1 * exp((-M{p}{n}) ./ d1) + A2 * exp((-M{p}{n}) ./ d2);
        R{p}{n} = (dat(:, 3) - floor(dat(:, 3))) * 360;
        P{p}{n} = dat(:, 4); % Piezo position

        dat = dlmread([pths{p}, fname{p}{n}]);
        nframe{p}(n) = size(dat, 1);
        tmp = dlmread([pths{p}, 'c', fname{p}{n}(2:4), '.fps']);
        fps{p}(n) = tmp(1);
        Roff{p}{n} = tmp(2, :);
        ori{p}{n} = tmp(3, :);
        f{p}{n} = dat(:, 1);
        dat = dat(:, 2:end);
        t{p}{n} = f{p}{n} / fps{p}(n);
        nbead{p}(n) = size(dat, 2) / 3 - 1;
        
        % Subtract xy offset
        dat(:, [1:3:end, 2:3:end]) = dat(:, [1:3:end, 2:3:end]) - repmat(mean(dat(31:60, [1:3:end, 2:3:end]), 1), [nframe{p}(n), 1]);
        rx{p}{n} = dat(:, 1) * pixel_size;
        ry{p}{n} = dat(:, 2) * pixel_size;
        rz{p}{n} = dat(:, 3);
        x{p}{n} = dat(:, 4:3:end) * pixel_size;
        y{p}{n} = dat(:, 5:3:end) * pixel_size;
        z{p}{n} = dat(:, 6:3:end); % Show all traces
        dx{p}{n} = (x{p}{n} - repmat(rx{p}{n}, [1, nbead{p}(n)]));
        dy{p}{n} = (y{p}{n} - repmat(ry{p}{n}, [1, nbead{p}(n)]));
        dz{p}{n} = (z{p}{n} - repmat(rz{p}{n}, [1, nbead{p}(n)])) * correction_factor;

        % Synchronize motor data
        M{p}{n} = interp1(t2{p}{n}, M{p}{n}, t{p}{n});
        F{p}{n} = interp1(t2{p}{n}, F{p}{n}, t{p}{n});
        R{p}{n} = interp1(t2{p}{n}, R{p}{n}, t{p}{n});
        P{p}{n} = interp1(t2{p}{n}, P{p}{n}, t{p}{n});
    end
end

% Combine data from all paths
Fdat = [];
dxdat = [];
dydat = [];
dzdat = [];
rzdat = [];
Mdat = [];
for p = 1:npth
    for n = 1:nfile(p)
        Fdat = [Fdat; F{p}{n}];
        dxdat = [dxdat; dx{p}{n}];
        dydat = [dydat; dy{p}{n}];
        dzdat = [dzdat; dz{p}{n}];
        rzdat = [rzdat; rz{p}{n}];
        Mdat = [Mdat; M{p}{n}];
    end
end
r_Fdat = round(Fdat, 1);

%% Plot Data
number = 1:1:numel(Fdat);
number = number / freq;
dz_med = medfilt1(dzdat, freq / 10);

figure(1);
ax_dz = subplot(4, 1, [1, 2, 3]);
p_dz = plot(number, dzdat, 'color', [0.7 0.7 0.7]);
hold on

p_dz_med = plot(number, dz_med, 'k', 'linewidth', 0.5);
ylim([-300 520]);
set(gca, 'TickDir', 'in')
ylabel('Extension (nm)');
set(gca, 'fontsize', 15, 'linewidth', 2, 'fontweight', 'bold', 'TickLength', [0.005 0.005])
hold on

ax_F = subplot(4, 1, 4);
p_F = plot(number, Fdat, 'k', 'linewidth', 0.75);
yticks(0:10:50);
grid on;
xlabel('Time (s)')
ylabel('Force (pN)');
set(gca, 'TickDir', 'in')
set(gca, 'fontsize', 15, 'linewidth', 1, 'fontweight', 'bold', 'TickLength', [0.005 0.005])
linkaxes([ax_dz, ax_F], 'x')
set(gcf, 'Position', [100, 100, 1800, 900]);
